// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int             @id @default(autoincrement())
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  title     String          @db.VarChar(255)
  content   String?
  published Boolean         @default(false)
  author    User            @relation(fields: [authorId], references: [id])
  authorId  Int
  labels    LabelsOnPosts[]
  abstract  String?          @db.VarChar(255)
  projectGoals String?       @db.VarChar(255)
  methodology   String?      @db.VarChar(255)
  potentialAppl String?      @db.VarChar(255)
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstName String?
  lastName  String?
  password  String
  posts     Post[]
  Profile   Profile[]
}

model Label {
  id    Int             @id @default(autoincrement())
  name  String
  posts LabelsOnPosts[]
}

model LabelsOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  label      Label    @relation(fields: [labelId], references: [id])
  labelId    Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, labelId])
}

model Profile {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int // relation scalar field (used in the `@relation` attribute above)

  title String?

  organizations String? @db.VarChar(255)

  description String? @db.VarChar(255)

  publications String? @db.VarChar(255)

  twitterUrl String?

  linkedinUrl String?

  githubUrl String?

  mediumUrl String?

  image String? @db.VarChar(255)
}
